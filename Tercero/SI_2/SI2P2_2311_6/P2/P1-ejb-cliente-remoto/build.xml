<?xml version="1.0" encoding="UTF-8" ?>
<!-- Practicas de Sistemas Informaticos II -->
<project name="Servicio de Pago con VISA" default="ayuda" basedir=".">

	<property environment="env" />
  <property file="build.properties" />
        
	<path id="compile.server.classpath">
		<pathelement location="${as.lib}/javaee.jar"/>
	</path>

  <!-- Añadir al classpath la librería con los stubs generados en el despliegue del servicio -->
	<path id="compile.client.classpath">
		<pathelement location="${as.lib}/javaee.jar"/>
		<pathelement location="${build.server}"/>
	</path>

  <!-- Atributos de base de datos -->
	<import file="postgresql.xml" />

	<target name="ayuda">
		<echo>
NOTA IMPORTANTE: Antes de compilar el cliente, se debe compilar el servidor
para generar las clases de interfaz

Compilacion:
ant compilar-cliente
ant empaquetar-cliente

Despliegue:
ant desplegar
ant replegar
ant redesplegar

Base de datos:
ant regenerar-bd

General:
ant limpiar
ant limpiar-todo
		</echo>
	</target>

    <target name="todo">
        <antcall target="setup-db" />
        <antcall target="compilar-cliente" />
        <antcall target="empaquetar-cliente" />
        <antcall target="desplegar" />
    </target>
    
    <target name="casitodo">
        <antcall target="compilar-cliente" />
        <antcall target="empaquetar-cliente" />
        <antcall target="desplegar" />
    </target>    

	<target name="montar-jerarquia" description="Crea los directorios del proyecto">
		<mkdir dir="${build}" />
		<mkdir dir="${build}/WEB-INF/classes" />
		<mkdir dir="${build}/WEB-INF/lib" />		
		<mkdir dir="${dist}" />
	</target>
  
	<target name="compilar-cliente" depends="montar-jerarquia" description="Compila el cliente">
		<javac srcdir="${src}" 
		       destdir="${build}/WEB-INF/classes" 
		       includeantruntime="false"
		       includes="${paquete}/**" >
			<classpath refid="compile.client.classpath"/>
		</javac>
	</target>

	<target name="preparar-web-inf-cliente" description="Copia los archivos necesarios al WEB-INF para crear el .war">
		<copy todir="${build}">
    		  <fileset dir="${web}"/>
		</copy>
	</target>

	<target name="empaquetar-cliente" description="Genera un .war de la aplicacion web" depends="preparar-web-inf-cliente">
		<delete file="${dist}/${war}" />
		<jar jarfile="${dist}/${war}" >
			<fileset dir="${build}" />
		</jar>
	</target>

	<target name="desplegar" description="Despliega la aplicacion" >
               <exec executable="${asadmin}">
                   <arg line=" --user ${as.user}" />
                   <arg line=" --passwordfile ${as.passwordfile}" />
                   <arg line=" --host ${as.host}" />
                   <arg line=" --port ${as.port}" />
                   <arg line=" deploy"/>
                   <arg line=" --name ${nombre} "/>
                   <arg line=" --target ${as.target} "/>
                   <arg line=" ${dist}/${war}   "/>
               </exec>
  	</target>

	<target name="replegar" description="Repliega la aplicacion" >
               <exec executable="${asadmin}">
                   <arg line=" --user ${as.user}" />
                   <arg line=" --passwordfile ${as.passwordfile}" />
                   <arg line=" --host ${as.host}" />
                   <arg line=" --port ${as.port}" />
                   <arg line=" undeploy"/>
                   <arg line=" --target ${as.target} "/>
                   <arg line=" ${nombre} "/>
               </exec>
	</target> 
	
	<target name="redesplegar" description="Repliega y vuelve a desplegar" >
		<antcall target="replegar" />
		<antcall target="desplegar" />
	</target>

	<target name="regenerar-bd" description="Regenera BD" depends="setup-db" >
	</target>
	
	<target name="limpiar" 
		description="Borra el directorio build">
		<delete dir="${build}" />
	</target>
	  
	<target name="limpiar-todo" 
		description="Borra el directorio build y el directorio dist">
		<delete dir="${build}" />
		<delete dir="${dist}" />
	</target>
</project>
